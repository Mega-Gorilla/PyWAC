[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "pybind11>=2.10.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "pypac"
version = "0.2.0"
description = "Python Process Audio Capture for Windows - High-level audio control library"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "PyPAC Contributors"},
]
maintainers = [
    {name = "PyPAC Contributors"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Multimedia :: Sound/Audio :: Capture/Recording",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows :: Windows 11",
]
keywords = ["audio", "windows", "wasapi", "recording", "capture", "volume", "process", "loopback"]
requires-python = ">=3.7"
dependencies = [
    "numpy>=1.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black>=22.0",
    "pylint>=2.0",
    "mypy>=0.900",
    "sphinx>=4.0",
    "twine>=3.0",
    "build>=0.7",
]
examples = [
    "psutil>=5.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "sphinx-autodoc-typehints>=1.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/pypac"
Documentation = "https://github.com/yourusername/pypac#readme"
Repository = "https://github.com/yourusername/pypac.git"
"Bug Reports" = "https://github.com/yourusername/pypac/issues"
Changelog = "https://github.com/yourusername/pypac/blob/main/CHANGELOG.md"

[project.scripts]
pypac-record = "pypac.cli:record_command"
pypac-list = "pypac.cli:list_command"
pypac-volume = "pypac.cli:volume_command"

[tool.setuptools]
packages = ["pypac", "pypac._native"]
include-package-data = true

[tool.setuptools.package-data]
pypac = ["py.typed"]
"pypac._native" = ["*.pyd", "*.so"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-ra -q --strict-markers"

[tool.black]
line-length = 100
target-version = ["py37", "py38", "py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | tools
)/
'''

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0212",  # protected-access
]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
no_implicit_reexport = true

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true